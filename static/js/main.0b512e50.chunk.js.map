{"version":3,"sources":["components/ConnectButton.tsx","App.tsx","index.tsx"],"names":["ConnectButton","setAccount","isMetaMaskInstalled","ethereum","window","Boolean","isMetaMask","useEffect","handleOnClick","a","request","method","accounts","message","error","className","onClick","TextArea","Input","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","App","db","getDatabase","ContainerHeight","innerHeight","useState","autoFollow","setAutoFollow","requestNum","setRequestNum","addresss","setAddresss","endNum","setEndNum","setLoading","add","setAdd","account","addressList","setAddressList","web3","Web3","onFinish","addressArr","newAddressArr","_addresss","replace","replaceAll","console","log","i","length","address","slice","utils","isAddress","push","set","ref","onValue","snapshot","data","val","formatedData","Object","keys","filter","item","map","forEach","onScrollEnd","document","querySelector","scrollTop","scrollHeight","autoFollowALl","nextAutoFollow","setTimeout","handleFollowAll","arr","Array","prototype","call","querySelectorAll","index","innerText","children","click","href","target","style","width","onChange","e","value","placeholder","type","block","icon","PlusOutlined","justify","span","offset","dataLength","next","height","hasMore","loader","paragraph","rows","active","endMessage","plain","scrollableTarget","dataSource","renderItem","Item","actions","provider","namespace","toAddr","env","Env","PRODUCTION","chain","Blockchain","ETH","onSuccess","onFailure","rootElement","getElementById","ReactDOMClient","render"],"mappings":"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","file":"static/js/main.0b512e50.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { Button, message } from \"antd\";\r\n\r\nfunction ConnectButton({ setAccount }) {\r\n  // Check function if MetaMask is installed\r\n  const isMetaMaskInstalled = () => {\r\n    const { ethereum } = window;\r\n    return Boolean(ethereum && ethereum.isMetaMask);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleOnClick();\r\n  }, []);\r\n\r\n  const handleOnClick = async () => {\r\n    if (isMetaMaskInstalled()) {\r\n      // Request to connect to MetaMask\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        // Update the state for account\r\n        setAccount(accounts[0]);\r\n      } catch (error) {\r\n        message.error(error.message);\r\n      }\r\n    } else {\r\n      message.error(\"Please install MetaMask.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Button className=\"connectButton\" onClick={handleOnClick}>\r\n      Connect wallet\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default ConnectButton;\r\n","import { useEffect, useRef, useState } from \"react\";\nimport Web3 from \"web3\";\nimport \"./styles.css\";\nimport ConnectButton from \"./components/ConnectButton\";\nimport {\n  FollowButton,\n  Env,\n  Blockchain,\n} from \"@cyberconnect/react-follow-button\";\nimport { Form, Input, Button, Space, List, Skeleton, Divider,Row, Col } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set, get, onValue } from \"firebase/database\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport \"antd/dist/antd.min.css\";\nconst TextArea = Input.TextArea;\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB7U2BxIp7VdA0nLrsuxxfUF6ybNTvTxO8\",\n  authDomain: \"wechat-follow.firebaseapp.com\",\n  projectId: \"wechat-follow\",\n  storageBucket: \"wechat-follow.appspot.com\",\n  messagingSenderId: \"1006898251801\",\n  appId: \"1:1006898251801:web:c20393888d3d40a8588288\",\n  measurementId: \"G-QCZGJCSHVG\",\n  databaseURL: \"https://wechat-follow-default-rtdb.firebaseio.com/\",\n};\nlet _autoFollowTimes = null\nlet _nextAutoFollowTimes = null\nconst app = initializeApp(firebaseConfig);\nexport default function App() {\n  const db = getDatabase();\n  const ContainerHeight = window.innerHeight - 300;\n  const [nextAutoFollowTimes, setNextAutoFollowTimes] = useState<number>(0);\n  const [autoFollow, setAutoFollow] = useState<boolean>(false);\n  const [requestNum, setRequestNum] = useState<number>(0);\n  const [addresss, setAddresss] = useState<string>(\"\");\n  const [endNum, setEndNum] = useState<number>(200);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [followAllIn, setFollowAllIn] = useState<boolean>(false);\n  const [add, setAdd] = useState<boolean>(false);\n  const [account, setAccount] = useState<string>(\"\");\n  const [addressList, setAddressList] = useState<any[]>([]);\n  const web3 = new Web3(window.ethereum);\n  const onFinish = async () => {\n    let addressArr = [...addressList];\n    let newAddressArr = []\n    var _addresss = addresss.replace(/[^A-Za-z0-9]*/g,\"\");\n    _addresss = _addresss.replaceAll(\"(\\n|\\r|(\\r\\n)|(\\u0085)|(\\u2028)|(\\u2029))\", \"\");\n    console.log(_addresss, '---address');\n    \n    for (let i = 0; i <_addresss.length; i+=42) {\n      var address = _addresss.slice(i,i+42);\n      if (web3.utils.isAddress(address)) {\n        newAddressArr.push(address)\n      }\n    };\n    for (let address of addressArr) {\n      addressArr.push(address)\n      await set(ref(db, \"address_list/\" + address), address);\n    }\n    setAddressList(addressArr);\n  };\n\n  useEffect(() => {\n    onValue(ref(db, \"address_list/\"), (snapshot) => {\n      const data = snapshot.val();\n      const formatedData = Object.keys(data).filter(item=>{\n        item = item.replace(/[^A-Za-z0-9,]*/g,\"\");\n        item = item.replaceAll(\"(\\n|\\r|(\\r\\n)|(\\u0085)|(\\u2028)|(\\u2029))\", \"\");\n        return web3.utils.isAddress(item)\n      });\n      const map = {};\n      formatedData.forEach(item=>{\n        item = item.replace(/[^A-Za-z0-9,]*/g,\"\");\n        map[item] = item;\n      });\n      setAddressList(Object.keys(map));\n    });\n  }, []);\n  const onScrollEnd = async () => {\n    document.querySelector(\".infinite-scroll-component\").scrollTop = document.querySelector(\".ant-list.ant-list-split\").scrollHeight;\n  }\n  const autoFollowALl = async () => {\n    let nextAutoFollow = !autoFollow;\n    setAutoFollow(nextAutoFollow)\n    if (nextAutoFollow) {\n      await onScrollEnd();\n      setTimeout(async ()=>{\n        await handleFollowAll();\n        setTimeout(async ()=>{\n          await autoFollowALl();\n        }, 40000)\n      }, 40000)\n    }\n  }\n  const handleFollowAll = async ()=>{\n    let arr = [...Array.prototype.slice.call(document.querySelectorAll(\".ant-list-item-action li\"), 0)];\n    for (let index of Object.keys(arr)) {\n      if (arr[index].innerText === \"Follow\") {\n          arr[index].children[0].children[0].click();\n      }\n    };\n  }\n  const onScroll = () => {\n    setLoading(true);\n    setEndNum(endNum+500)\n    setLoading(false)\n  }\n  return (\n    <div className=\"container\">\n      <p>基于waha3大佬的开源代码修改的 <a href=\"https://github.com/waha3/follow\" target=\"_blank\">waha3 github</a> | <a href=\"https://waha3.github.io/follow/\" target=\"_blank\">作者原项目github page</a></p>\n      <p>如果waha3大佬作者不允许我修改使用，请联系我 我会下掉页面 <a href=\"mailto:noshufu@gmail.com\">请给我发邮件</a></p>\n      <div>\n        <div style={{width: 800}}>\n          {account ? (\n            <Button\n              style={{\n                width: \"auto\",\n              }}\n            >\n              {account}\n            </Button>\n          ) : (\n            <>\n              <h1>Connect with Follow Button</h1>\n              <ConnectButton setAccount={setAccount}></ConnectButton>\n            </>\n          )}\n        <div>\n          {\n            add? (<TextArea onChange={e=>setAddresss(e.target.value)} value={addresss} placeholder=\"wallet address\" />):(\n              <Button\n                type=\"dashed\"\n                onClick={() => setAdd(true)}\n                block\n                icon={<PlusOutlined />}\n              >\n                Add Wallet Address\n              </Button>\n            )\n          }\n        </div>\n      </div>\n      <Row justify=\"space-between\">\n        <Col span={5}>\n          <Button type=\"primary\" onClick={onFinish}>\n            Submit\n          </Button>\n        </Col>\n        <Col span={10} offset={2}>\n          <Row>\n            <Col offset={1}>\n              <Button type=\"primary\" onClick={handleFollowAll}>FollowAll</Button>\n            </Col>\n            <Col offset={1}>\n              <Button type=\"primary\" onClick={onScrollEnd}>Scroll End</Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n          <Button type=\"primary\" style={{width: \"100%\"}} onClick={autoFollowALl}>\n            {!autoFollow?`Auto Follow(测试功能，不保证稳定性)`: `轮循中，点击关闭功能`}</Button>\n      </Row>\n      </div>\n      <InfiniteScroll\n        dataLength={addressList.slice(0, endNum).length}\n        next={onScroll}\n        height={ContainerHeight}\n        hasMore={addressList.slice(0, endNum).length < addressList.length}\n        loader={<Skeleton paragraph={{ rows: 1 }} active />}\n        endMessage={<Divider plain>It is all, nothing more 🤐</Divider>}\n        scrollableTarget=\"scrollableDiv\"\n      >\n        <List\n          style={{width: 800}}\n          dataSource={addressList.slice(0, endNum)}\n          renderItem={(address, index) => (\n            <List.Item\n              key={address}\n              actions={[\n                <FollowButton\n                  provider={window.ethereum}\n                  namespace=\"CyberConnect\"\n                  toAddr={address}\n                  env={Env.PRODUCTION}\n                  chain={Blockchain.ETH}\n                  onSuccess={(e) => {\n                    console.log(e);\n                    setRequestNum(requestNum+1)\n                  }}\n                  onFailure={(e) => {\n                    console.log(e);\n                    setRequestNum(requestNum+1)\n                  }}\n                />,\n              ]}\n            >\n              {address}\n            </List.Item>\n          )}\n        />\n      </InfiniteScroll>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = ReactDOMClient.createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}